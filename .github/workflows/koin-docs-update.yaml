name: Koin docs update

on:
#  schedule:
#    - cron: '0 0 * * 0'  # 每周日 UTC 时间 0:00 运行
  workflow_dispatch:  # 允许手动触发

jobs:
  check-external-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史以进行差异比较

      - name: Checkout external repository
        uses: actions/checkout@v4
        with:
          repository: InsertKoinIO/koin
          path: external-repo

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install @google/genai

      - name: Check last run timestamp
        id: last-run
        run: |
          if [ -f "last_check.txt" ]; then
            echo "first_run=false" >> $GITHUB_OUTPUT
            echo "last_commit=$(cat last_check.txt)" >> $GITHUB_OUTPUT
          else
            echo "first_run=true" >> $GITHUB_OUTPUT
          fi

      - name: Get changed markdown files
        id: changed-files
        if: steps.last-run.outputs.first_run == 'false'
        uses: tj-actions/changed-files@v46.0.3
        with:
          path: external-repo
          base_sha: ${{ steps.last-run.outputs.last_commit }}
          files: |
            docs/**/*.md

      - name: Get all markdown files (first run)
        id: all-files
        if: steps.last-run.outputs.first_run == 'true'
        run: |
          cd external-repo/docs
          # 查找所有 md 文件并转换为空格分隔的列表格式，与 tj-actions/changed-files 输出格式保持一致
          ALL_FILES=$(find docs -name "*.md" | tr '\n' ' ' | sed 's/ $//')
          echo "all_changed_files=$ALL_FILES" >>  $GITHUB_OUTPUT

      - name: Prepare files for translation
        id: prepare-translation
        run: |
          if [ "${{ steps.last-run.outputs.first_run }}" == "true" ]; then
            # 首次运行 - 使用所有文件
            echo "ALL_CHANGED_FILES=${{ steps.all-files.outputs.all_changed_files }}" >> $GITHUB_ENV
            echo "any_changed=true" >> $GITHUB_OUTPUT
          else
            # 后续运行 - 使用变更的文件
            echo "ALL_CHANGED_FILES=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_ENV
          
            if [ -n "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
              echo "any_changed=true" >> $GITHUB_OUTPUT
            else
              echo "any_changed=false" >> $GITHUB_OUTPUT
            fi
          fi
          
          # 更新最后检查的提交
          cd external-repo
          git rev-parse HEAD > ../last_check.txt

      - name: Translate
        if: steps.prepare-translation.outputs.any_changed == 'true'
        env:
          BASE_DIR: ./koin
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: node .github/workflows/translate.js

      - name: Commit and push changes
        if: steps.prepare-translation.outputs.any_changed == 'true'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          # 排除 package.json 和 package-lock.json 文件
          git add . ':!package.json' ':!package-lock.json'
          git commit -m '添加翻译文件并更新检查记录 $(date +%Y-%m-%d)'
          git push origin main

      - name: Create summary
        run: |
          if [ "${{ steps.last-run.outputs.first_run }}" == "true" ]; then
            echo "## 首次运行 - 已处理所有文档文件" >> $GITHUB_STEP_SUMMARY
            FILES="${{ steps.all-files.outputs.all_changed_files }}"
            COUNT=$(echo "$FILES" | wc -w)
            echo "共处理 $COUNT 个文件" >> $GITHUB_STEP_SUMMARY
          else
            echo "## 文档更新检测" >> $GITHUB_STEP_SUMMARY
          
            if [ -z "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
              echo "没有检测到文档变更" >> $GITHUB_STEP_SUMMARY
            else
              CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
              COUNT=$(echo "$CHANGED_FILES" | wc -w)
              echo "检测到 $COUNT 个文件变更:" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "$CHANGED_FILES" | tr ' ' '\n' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            fi
          fi